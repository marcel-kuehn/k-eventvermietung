---
import type { FormProps } from '@/types/blocks';
import BlockRenderer from '@/components/blocks/BlockRenderer.astro';
import { cn } from '@/utils/cn';
import Card from '@/components/ui/Card.astro';
import Typography from '@/components/ui/Typography.astro';
import Button from '@/components/ui/Button.astro';
import Icon from '@/components/ui/Icon.astro';
import Divider from '@/components/ui/Divider.astro';
import { storyblokEditable } from '@storyblok/astro';
import { makeSafeIDfromUID } from '@/utils/storyblok';

interface Props extends FormProps {}

const {
  title,
  method,
  action,
  formElements,
  cta,
  additionalElements,
  _uid,
  _editable,
  component,
}: Props = Astro.props;

const id = makeSafeIDfromUID(_uid);
const labelId = `${id}-label`;
---

<form
  class={cn('flex justify-center min-h-screen items-center sm:p-4')}
  aria-labelledby={labelId}
  id={id}
  action={action}
  method={method}
  {...storyblokEditable({ _editable, _uid, component })}
>
  <Card
    className="max-w-2xl w-full min-h-screen sm:min-h-96 border-0 rounded-none sm:rounded-xl sm:border-2"
    as="div"
  >
    <Typography as="h1" variant="h2" id={labelId} className="sm:mt-0 mt-2">{title}</Typography>

    <div class={cn('flex-1 flex flex-col gap-4')}>
      <BlockRenderer blocks={formElements} />
    </div>

    <Button type="submit" variant="primary" className="mt-4"
      >{cta} <Icon name="ArrowRight" aria-hidden /></Button
    >

    {
      additionalElements && additionalElements.length > 0 && (
        <>
          <Divider />
          <BlockRenderer blocks={additionalElements} />
        </>
      )
    }
  </Card>
</form>
